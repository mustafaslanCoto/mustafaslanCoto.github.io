{
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        "---\n",
        "format:\n",
        "  revealjs:\n",
        "    slide-number: c/t\n",
        "    width: 1600\n",
        "    height: 900\n",
        "    theme: simple\n",
        "# jupyter: quarto-python\n",
        "---\n",
        "\n",
        "<!-- logo style -->\n",
        "\n",
        "<style>\n",
        "  .logo-left {\n",
        "    position: absolute;\n",
        "    top: 10px;\n",
        "    left: 20px;\n",
        "  }\n",
        "\n",
        "  .logo-right {\n",
        "    position: absolute;\n",
        "    top: 10px;\n",
        "    right: 20px;\n",
        "    display: flex;\n",
        "    gap: 10px;\n",
        "    align-items: flex-start;\n",
        "  }\n",
        "\n",
        "  .logo-left img,\n",
        "  .logo-right img {\n",
        "    height: 130px;\n",
        "    width: auto;\n",
        "    \n",
        "  }\n",
        "  \n",
        "/* title sytle */\n",
        "  h1 {\n",
        "    text-align: center;\n",
        "  }\n",
        "\n",
        "</style>\n",
        "\n",
        "<div class=\"logo-left\">\n",
        "  <img src=\"images/cu.jpg\" alt=\"Left Logo\">\n",
        "</div>\n",
        "\n",
        "<div class=\"logo-right\">\n",
        "  <img src=\"images/dlsg.png\" alt=\"Right Logo\">\n",
        "</div>\n",
        "\n",
        "  <br>\n",
        "  <br>\n",
        "  <br>\n",
        "  <br>\n",
        "  <br>\n",
        "  <br>\n",
        "  <h1>Basics of Python and Introduction to Quarto in Visual Studio Code</h1>\n",
        "\n",
        "<div class=\"title-block\">\n",
        "  <br>\n",
        "  <br>\n",
        "  <h3>\n",
        "  Mustafa Aslan, PhD Researcher <br>\n",
        "  Data Lab for Social Good Research Group <br>\n",
        "  Cardiff University, UK <br>\n",
        "  <!-- <span style=\"color: rgba(179, 0, 0, 0.7); font-weight: bold;\">Slides:</span>\n",
        "  <a href=\"https://mustafaslancoto.github.io/talks/\" style=\"color: #000; font-weight: bold; text-decoration: underline dotted;text-underline-offset: 5px\">\n",
        "    https://mustafaslancoto.github.io/talks/\n",
        "  </a> -->\n",
        "  </h3>\n",
        "  <p>3 Mar 2025</p>\n",
        "</div>\n",
        "\n",
        "\n",
        "## Outline\n",
        "\n",
        "- Introduction to VS\n",
        "\n",
        "- Installing and Importing Libraries in Python\n",
        "\n",
        "- Getting Help in Python\n",
        "\n",
        "- Introduction to Quarto\n",
        "\n",
        "# Introduction to VS Code\n",
        "\n",
        "## Introduction to VS Code\n",
        "\n",
        ":::: {.columns}\n",
        "::: {.column width=\"50%\" .fragment style=\"font-size: 80%;\"}\n",
        "### What is VS Code\n",
        "::: {.incremental}\n",
        "- A free, and open-source code editor developed by Microsoft.\n",
        "- Supports multiple programming languages and frameworks.\n",
        ":::\n",
        ":::\n",
        "\n",
        "::: {.column width=\"50%\" .fragment style=\"font-size: 80%;\"}\n",
        "### Key Features\n",
        "::: {.incremental}\n",
        "- **Integrated Terminal:** Access a terminal directly in VS Code for running commands.\n",
        "- **Extensions:** Add functionality for specific languages, tools, or frameworks (e.g., Quarto, Python, R).\n",
        "- **Source Control:** Built-in Git integration for version control.\n",
        "- **Debugging:** Powerful debugging tools for various languages.\n",
        "- **Customizable Interface:** Themes, layout, and key bindings to suit user preferences.\n",
        ":::\n",
        ":::\n",
        "::::\n",
        "\n",
        "# Installing and Importing Libraries\n",
        "\n",
        "## What is library?\n",
        "\n",
        "::: {.incremental}\n",
        "- A collection of pre-written code that contains **functions** and **modules** that developers can use to solve programming tasks\n",
        "\n",
        "- Python libraries cover libraries for a wide range of tasks, including:\n",
        "  - `pandas` and `numpy` for data analysis, cleaning, exploration, and efficient numerical computations. \n",
        "  - `scikit-learn`, `TensorFlow` for machine learning tasks such as prediction, clustering, and forecasting.\n",
        "  - `statsforecast`, `darts` and `skforecast` for forecasting tasks\n",
        ":::\n",
        "\n",
        "## What is library?\n",
        "\n",
        ":::: {.columns}\n",
        "::: {.column width=\"50%\" .fragment style=\"font-size: 80%;\"}\n",
        "### What is PIP?\n",
        "::: {.incremental}\n",
        "- PIP is a package manager for Python packages or modules \n",
        "- PIP is used to install and manage Python libraries\n",
        ":::\n",
        ":::\n",
        "\n",
        "::: {.column width=\"50%\" .fragment style=\"font-size: 80%;\"}\n",
        "### Installing a Library\n",
        "::: {.incremental}\n",
        "- 1. Open a **terminal** or **command prompt**.\n",
        "- 2. Use the command `pip install <library-name>`.\n",
        "  - Example: `pip install numpy`\n",
        "- 3. Alternatively, run the following code in a notebook to install libraries directly:\n",
        "      ```python\n",
        "      !pip install numpy\n",
        "      ```\n",
        ":::\n",
        ":::\n",
        "::::\n",
        "\n",
        "## Importing libraries or modules\n",
        "\n",
        "::: {.incremental}\n",
        "- Once a library is installed, you need to import it into your Python script:\n",
        "  - Example:\n",
        "    ```python\n",
        "    import numpy\n",
        "    ```\n",
        "- Use `as` to create an alias for convenience (e.g., `import pandas as pd` or `import numpy as np`).\n",
        "- Use `from` ... `import` ... to call specific functions from libraries or modules :\n",
        "\n",
        "  - Example:\n",
        "    ```python\n",
        "    from math import sqrt\n",
        "    print(sqrt(16))  # Output: 4.0\n",
        "    ```\n",
        ":::\n",
        "\n",
        "## Namespaces\n",
        "\n",
        ":::: {.columns}\n",
        "::: {.column width=\"50%\" .fragment style=\"font-size: 80%;\"}\n",
        "\n",
        "::: {.incremental}\n",
        "- A namespace is a system that has a unique name for each and every object in Python.\n",
        "- An object might be a variable or a method.\n",
        "- Some functions like `print()`, `id()` are always present, these are built-in namespaces. \n",
        "- When a user creates a module, a global namespace gets created, later the creation of local functions creates the local namespace.\n",
        ":::\n",
        ":::\n",
        "\n",
        "::: {.column width=\"50%\" .fragment style=\"font-size: 80%;\"}\n",
        "\n",
        "### Example:\n",
        "\n",
        "```{.python}\n",
        "x = \"global\"\n",
        "\n",
        "def outer_function():\n",
        "    # Enclosing namespace\n",
        "    x = \"enclosing\"\n",
        "    \n",
        "    def inner_function():\n",
        "        # Local namespace\n",
        "        x = \"local\"\n",
        "        print(\"Inner:\", x)  # Prints: Inner: local\n",
        "\n",
        "    inner_function()\n",
        "    print(\"Outer:\", x)  # Prints: Outer: enclosing\n",
        "\n",
        "outer_function()\n",
        "print(\"Global:\", x)  # Prints: Global: global\n",
        "```\n",
        ":::\n",
        "::::\n",
        "\n",
        "# Getting Help in Python\n",
        "\n",
        "## Using built-in help functions\n",
        "\n",
        "::: {.incremental}\n",
        "- Python provides built-in tools to explore libraries and and functions\n",
        "- Some of them are: \n",
        "    - `help()`: Displays documentation for an object.\n",
        "    - `dir()`: Lists the attributes and methods of an object\n",
        "    - `type()`: Displays the type of the object\n",
        ":::\n",
        "\n",
        "## Using built-in help functions\n",
        "\n",
        "### Examples:\n",
        "\n",
        ":::: {.columns}\n",
        "::: {.column width=\"33%\" .fragment style=\"font-size: 60%;\"}\n",
        "\n",
        "Example -1:"
      ],
      "id": "acac360e"
    },
    {
      "cell_type": "code",
      "metadata": {},
      "source": [
        "#| echo: true\n",
        "print(help(len))\n",
        "# output:"
      ],
      "id": "cdbf178f",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        ":::\n",
        "\n",
        "::: {.column width=\"33%\" .fragment style=\"font-size: 60%;\"}\n",
        "Example -2:"
      ],
      "id": "e1f388f9"
    },
    {
      "cell_type": "code",
      "metadata": {},
      "source": [
        "#| echo: true\n",
        "print(dir(list))\n",
        "# output:"
      ],
      "id": "9a39b82d",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        ":::\n",
        "\n",
        "::: {.column width=\"33%\" .fragment style=\"font-size: 60%;\"}\n",
        "Example -3:"
      ],
      "id": "f16739bb"
    },
    {
      "cell_type": "code",
      "metadata": {},
      "source": [
        "#| echo: true\n",
        "x = \"cardiff\"\n",
        "y = 5\n",
        "z = [1,2,3,4,5]\n",
        "\n",
        "print(type(x))\n",
        "print(type(y))\n",
        "print(type(z))\n",
        "# output:"
      ],
      "id": "01df9029",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        ":::\n",
        ":::: \n",
        "\n",
        "# Introduction to Quarto\n",
        "\n",
        "## Three Main Tasks Using Quarto \n",
        "\n",
        "Quarto help us publish reproducible, production quality articles, presentations, dashboards, websites, blogs, and books in HTML, PDF, MS Word, ePub, and more.\n",
        "\n",
        "::: {.incremental}\n",
        "-   Writing: Combine Markdown, code, and visualizations in .qmd files.\n",
        "-   Render: Generate output formats like HTML, PDF, or slides.\n",
        "-   Publish: Share documents or host on platforms like GitHub.\n",
        ":::\n",
        "\n",
        "## How to Use Quarto in VS Code {.smaller}\n",
        "\n",
        ":::: {.columns}\n",
        "::: {.column width=\"33%\" .fragment fragment-index=1 style=\"font-size: 80%;\"}\n",
        "\n",
        "### 1. Install the Quarto Extension {.smaller}\n",
        "\n",
        "- Open VS Code.\n",
        "- Go to the Extensions view by clicking on the Extensions icon in the Activity Bar on the side of the window or press Ctrl+Shift+X.\n",
        "- Search for \"Quarto\".\n",
        "- Install the Quarto extension on you vs code\n",
        ":::\n",
        "\n",
        "::: {.column width=\"33%\" .fragment fragment-index=2 style=\"font-size: 80%;\"}\n",
        "### 2. Create a Quarto Document {.smaller}\n",
        "- Go to File > New File.\n",
        "- Save the file with a .qmd extension (e.g., example.qmd).\n",
        "- Start writing your Quarto content.\n",
        ":::\n",
        "\n",
        "::: {.column width=\"33%\" .fragment fragment-index=3 style=\"font-size: 80%;\"}\n",
        "### 3. Render a Quarto Document {.smaller}\n",
        "- To render and preview, execute the Quarto: \"Preview\" command.\n",
        "- If you want to preview a different format, use the Quarto: Preview Format command and select the format you want to render to (e.g., HTML, PDF, DOCX).\n",
        "- Quarto will render the document, and the output file will be saved in the same directory.\n",
        ":::\n",
        "::::\n",
        "\n",
        "## Example -1 {.smaller}\n",
        "\n",
        "Here’s an example of creating a bar plot using Seaborn package with a sample dataset:\n",
        "\n",
        ":::: {.columns}\n",
        "::: {.column width=\"50%\"}\n",
        "```{.python code-line-numbers=\"16-23\"}\n",
        "# Import required libraries\n",
        "import seaborn as sns\n",
        "import matplotlib.pyplot as plt\n",
        "\n",
        "# Sample data\n",
        "data = {\n",
        "    \"Category\": [\"A\", \"B\", \"C\", \"D\", \"E\"],\n",
        "    \"Values\": [23, 45, 56, 78, 12]\n",
        "}\n",
        "\n",
        "# Convert to a DataFrame\n",
        "import pandas as pd\n",
        "df = pd.DataFrame(data).sort_values(by = \"Values\", ascending=False)\n",
        "\n",
        "# Create a bar plot\n",
        "sns.barplot(x=\"Category\", y=\"Values\", data=df, palette=\"viridis\")\n",
        "\n",
        "# Add a title and labels\n",
        "plt.title(\"Sample Bar Plot\")\n",
        "plt.xlabel(\"Category\")\n",
        "plt.ylabel(\"Values\")\n",
        "# Show the plot\n",
        "plt.show()\n",
        "```\n",
        ":::\n",
        "\n",
        "::: {.column width=\"50%\"}"
      ],
      "id": "dc5e14ab"
    },
    {
      "cell_type": "code",
      "metadata": {},
      "source": [
        "# Import required libraries\n",
        "import pandas as pd\n",
        "import numpy as np\n",
        "import seaborn as sns\n",
        "import matplotlib.pyplot as plt\n",
        "\n",
        "# Sample data\n",
        "data = {\n",
        "    \"Category\": [\"A\", \"B\", \"C\", \"D\", \"E\"],\n",
        "    \"Values\": [23, 45, 56, 78, 12]\n",
        "}\n",
        "\n",
        "# Convert to a DataFrame\n",
        "import pandas as pd\n",
        "df = pd.DataFrame(data).sort_values(by = \"Values\", ascending=False)\n",
        "\n",
        "# Create a bar plot\n",
        "sns.barplot(x=\"Category\", y=\"Values\", data=df, palette=\"viridis\")\n",
        "\n",
        "# Add a title and labels\n",
        "plt.title(\"Sample Bar Plot\")\n",
        "plt.xlabel(\"Category\")\n",
        "plt.ylabel(\"Values\")\n",
        "# Show the plot\n",
        "plt.show()"
      ],
      "id": "934216e4",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        ":::\n",
        "\n",
        "::::\n",
        "\n",
        "## Example -2\n",
        "\n",
        "An example of creating a line graph using plotly package"
      ],
      "id": "443189b4"
    },
    {
      "cell_type": "code",
      "metadata": {},
      "source": [
        "#| echo: true\n",
        "#| output: true\n",
        "\n",
        "import plotly.express as px\n",
        "\n",
        "df = px.data.gapminder().query(\"country=='Canada'\")\n",
        "fig = px.line(df, x=\"year\", y=\"lifeExp\", title='Life expectancy in Canada')\n",
        "fig.show()"
      ],
      "id": "111b7c9c",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        "## Exploring Python documentation and community forums\n",
        "\n",
        ":::: {.columns}\n",
        "::: {.column width=\"50%\"}\n",
        "\n",
        "### Websites\n",
        "\n",
        "- [w3schools](https://www.w3schools.com/)\n",
        "- [datacamp](https://www.datacamp.com/)\n",
        "- [codeacademy](https://www.codecademy.com/)\n",
        "- [learnpython](https://www.learnpython.org/)\n",
        "\n",
        ":::\n",
        "\n",
        "::: {.column width=\"50%\"}\n",
        "### Forums\n",
        "- [Stack Overflow](https://stackoverflow.co/)\n",
        "- [Real Python](https://realpython.com/)\n",
        "\n",
        ":::\n",
        "::::\n",
        "\n",
        "# THANK YOU !!!"
      ],
      "id": "886326aa"
    }
  ],
  "metadata": {
    "kernelspec": {
      "name": "quarto-python",
      "language": "python",
      "display_name": "Python (quarto-python)",
      "path": "/Users/aslanm/Library/Jupyter/kernels/quarto-python"
    }
  },
  "nbformat": 4,
  "nbformat_minor": 5
}